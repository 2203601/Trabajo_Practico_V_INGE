# ===========================================
# COFFEEHUB CI/CD - QA y PRODUCCIÓN (Azure)
# ===========================================
# Funcionalidades:
# - Build del backend y frontend
# - Deploy a QA (con CORS y BACKEND_URL configurados)
# - Copia automática del coffeehub.db a PROD
# - Deploy a Producción
# ===========================================

trigger:
  branches:
    include:
      - main

pool:
  name: SelfHosted

variables:
  RESOURCE_GROUP_NAME: 'TPS-INGE-2025'
  azureServiceConnection: 'azure-tp05-connection'
  
  backendAppNameQA: 'Coffeehub-Back-QA'
  frontendAppNameQA: 'Coffeehub-Front-QA'
  backendAppNameProd: 'Coffeehub-Back-Prod'
  frontendAppNameProd: 'Coffeehub-Front-Prod'


# -------------------- STAGE 1: BUILD --------------------
stages:
- stage: Build
  displayName: "CI: Instalar, Probar y Empaquetar"
  jobs:
  - job: BuildJob
    displayName: "Construir Backend y Frontend"
    steps:
      - script: |
          npm install
        displayName: 'Instalar Dependencias (Backend)'
        workingDirectory: 'coffehub/backend'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: 'coffehub/backend'
          artifact: 'backend-code'
        displayName: "Publicar Código Backend"
        
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: 'coffehub/frontend'
          artifact: 'frontend-code'
        displayName: "Publicar Código Frontend"


# -------------------- STAGE 2: DEPLOY QA --------------------
- stage: Deploy_QA
  displayName: "CD: Desplegar QA + Configurar Entorno"
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployQA
    environment: 'QA'
    strategy:
      runOnce:
        deploy:
          steps:
            # ---- Backend ----
            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: 'backend-code'
                path: '$(Pipeline.Workspace)/backend-source' 

            - task: AzureWebApp@1
              displayName: "Deploy Backend QA"
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                appName: '$(backendAppNameQA)'
                package: '$(Pipeline.Workspace)/backend-source'
                runtimeStack: 'NODE|18-lts'
                startUpCommand: 'npm install && npm start'

            # ---- Frontend ----
            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: 'frontend-code'
                path: '$(Pipeline.Workspace)/frontend-source'

            - task: AzureWebApp@1
              displayName: "Deploy Frontend QA"
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                appName: '$(frontendAppNameQA)'
                package: '$(Pipeline.Workspace)/frontend-source'
                runtimeStack: 'NODE|18-lts'
                startUpCommand: 'npm install && npm start'

            # ---- Configuración QA ----
            - task: AzureCLI@2
              displayName: 'Configurar BACKEND_URL en Frontend QA'
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  BACKEND_URL_VAL="https://coffeehub-back-qa-argeftdrb3dkb9du.brazilsouth-01.azurewebsites.net"
                  FRONTEND_APP='$(frontendAppNameQA)'
                  RG='$(RESOURCE_GROUP_NAME)'
                  echo "➡️ Configurando BACKEND_URL en $FRONTEND_APP"
                  az webapp config appsettings set --name "$FRONTEND_APP" --resource-group "$RG" --settings BACKEND_URL="$BACKEND_URL_VAL"

            - task: AzureCLI@2
              displayName: 'Configurar CORS en Backend QA'
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  FRONTEND_URL_VAL="https://coffeehub-front-qa-argqggbvc3g0gkdc.brazilsouth-01.azurewebsites.net"
                  BACKEND_APP='$(backendAppNameQA)'
                  RG='$(RESOURCE_GROUP_NAME)'
                  echo "➡️ Configurando CORS para $FRONTEND_URL_VAL"
                  az webapp cors add --name "$BACKEND_APP" --resource-group "$RG" --allowed-origins "$FRONTEND_URL_VAL"


# -------------------- STAGE 3: SYNC QA → PROD --------------------
- stage: Sync_Data_QA_to_PROD
  displayName: "Sincronizar Base de Datos QA → PROD"
  dependsOn: Deploy_QA
  condition: succeeded()
  jobs:
  - deployment: SyncData
    environment: 'PROD'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureCLI@2
              displayName: "Copiar coffeehub.db de QA a PROD"
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  DB_FILE='coffeehub.db'
                  SOURCE_APP='$(backendAppNameQA)'
                  TARGET_APP='$(backendAppNameProd)'
                  RG='$(RESOURCE_GROUP_NAME)'

                  echo "⬇️ Descargando DB desde $SOURCE_APP ..."
                  curl -o $DB_FILE "https://${SOURCE_APP}.scm.azurewebsites.net/api/vfs/site/wwwroot/$DB_FILE"

                  if [ ! -s "$DB_FILE" ]; then
                      echo "❌ Error: no se pudo descargar $DB_FILE"
                      exit 1
                  fi

                  echo "✅ Base de datos descargada. Subiendo a $TARGET_APP..."
                  zip -r db_transfer.zip $DB_FILE
                  az webapp deploy --name "$TARGET_APP" --resource-group "$RG" --type zip --src-path db_transfer.zip --target-path '/home/site/wwwroot/'
                  echo "✅ DB sincronizada con éxito entre QA y PROD."


# -------------------- STAGE 4: DEPLOY PROD --------------------
- stage: Deploy_PROD
  displayName: "CD: Desplegar Producción + Configurar Entorno"
  dependsOn: Sync_Data_QA_to_PROD
  condition: succeeded()
  jobs:
  - deployment: DeployPROD
    environment: 'PROD'
    strategy:
      runOnce:
        deploy:
          steps:
            # ---- Backend ----
            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: 'backend-code'
                path: '$(Pipeline.Workspace)/backend-source'

            - task: AzureWebApp@1
              displayName: "Deploy Backend PROD"
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                appName: '$(backendAppNameProd)'
                package: '$(Pipeline.Workspace)/backend-source'
                runtimeStack: 'NODE|18-lts'
                startUpCommand: 'npm install && npm start'

            # ---- Frontend ----
            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: 'frontend-code'
                path: '$(Pipeline.Workspace)/frontend-source'

            - task: AzureWebApp@1
              displayName: "Deploy Frontend PROD"
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                appName: '$(frontendAppNameProd)'
                package: '$(Pipeline.Workspace)/frontend-source'
                runtimeStack: 'NODE|18-lts'
                startUpCommand: 'npm install && npm start'

            # ---- Configuración PROD ----
            - task: AzureCLI@2
              displayName: 'Configurar BACKEND_URL en Frontend PROD'
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  BACKEND_URL_VAL="https://$(backendAppNameProd).azurewebsites.net"
                  FRONTEND_APP='$(frontendAppNameProd)'
                  RG='$(RESOURCE_GROUP_NAME)'
                  echo "➡️ Configurando BACKEND_URL en $FRONTEND_APP"
                  az webapp config appsettings set --name "$FRONTEND_APP" --resource-group "$RG" --settings BACKEND_URL="$BACKEND_URL_VAL"

            - task: AzureCLI@2
              displayName: 'Configurar CORS en Backend PROD'
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  FRONTEND_URL_VAL="https://$(frontendAppNameProd).azurewebsites.net"
                  BACKEND_APP='$(backendAppNameProd)'
                  RG='$(RESOURCE_GROUP_NAME)'
                  echo "➡️ Configurando CORS en $BACKEND_APP"
                  az webapp cors add --name "$BACKEND_APP" --resource-group "$RG" --allowed-origins "$FRONTEND_URL_VAL"
