trigger:
  branches:
    include:
      - main

pool:
  name: SelfHosted

stages:
# ===============================
# BUILD STAGE
# ===============================
- stage: Build
  displayName: "Build Backend & Frontend"
  jobs:
  - job: BuildJob
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: "Use Node.js 18"

    - script: |
        cd coffehub/backend
        npm install
      displayName: "Install backend dependencies"

    - script: |
        cd coffehub/frontend
        npm install || true
        npm run build || echo "No build script definido"
      displayName: "Build frontend"

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'coffehub/backend'
        artifact: 'backend'
      displayName: "Publicar Backend"

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'coffehub/frontend'
        artifact: 'frontend'
      displayName: "Publicar Frontend"

# ===============================
# DEPLOY QA STAGE
# ===============================
- stage: Deploy_QA
  displayName: "Desplegar a QA"
  dependsOn: Build
  condition: succeeded()
  variables:
    azureServiceConnection: 'azure-tp05-connection'
    backendAppName: 'Coffeehub-Back-QA'
    frontendAppName: 'Coffeehub-Front-QA'
  jobs:
  - deployment: DeployQA
    environment: 'QA'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'backend'
              path: '$(Pipeline.Workspace)/backend'

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'frontend'
              path: '$(Pipeline.Workspace)/frontend'

          # ðŸ“¦ Desplegar Backend QA con variables de entorno
          - task: AzureWebApp@1
            displayName: "Deploy Backend QA"
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appName: '$(backendAppName)'
              package: '$(Pipeline.Workspace)/backend'
              runtimeStack: 'NODE|18-lts'
              appSettings: |
                [
                  { "name": "DB_HOST", "value": "$(DB_HOST)" },
                  { "name": "DB_USER", "value": "$(DB_USER)" },
                  { "name": "DB_PASS", "value": "$(DB_PASS)" },
                  { "name": "DB_NAME", "value": "$(DB_NAME)" }
                ]

          # ðŸ“¦ Desplegar Frontend QA
          - task: AzureWebApp@1
            displayName: "Deploy Frontend QA"
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appName: '$(frontendAppName)'
              package: '$(Pipeline.Workspace)/frontend'
              runtimeStack: 'NODE|18-lts'

# ===============================
# DEPLOY PRODUCTION STAGE
# ===============================
- stage: Deploy_PROD
  displayName: "Desplegar a ProducciÃ³n"
  dependsOn: Deploy_QA
  condition: succeeded()
  variables:
    azureServiceConnection: 'azure-tp05-connection'
    backendAppName: 'Coffeehub-Back-Prod'
    frontendAppName: 'Coffeehub-Front-Prod'
  jobs:
  - deployment: DeployPROD
    environment: 'PROD'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'backend'
              path: '$(Pipeline.Workspace)/backend'

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'frontend'
              path: '$(Pipeline.Workspace)/frontend'

          # ðŸ“¦ Desplegar Backend PROD con variables de entorno
          - task: AzureWebApp@1
            displayName: "Deploy Backend PROD"
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appName: '$(backendAppName)'
              package: '$(Pipeline.Workspace)/backend'
              runtimeStack: 'NODE|18-lts'
              appSettings: |
                [
                  { "name": "DB_HOST", "value": "$(DB_HOST)" },
                  { "name": "DB_USER", "value": "$(DB_USER)" },
                  { "name": "DB_PASS", "value": "$(DB_PASS)" },
                  { "name": "DB_NAME", "value": "$(DB_NAME)" }
                ]

          # ðŸ“¦ Desplegar Frontend PROD
          - task: AzureWebApp@1
            displayName: "Deploy Frontend PROD"
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appName: '$(frontendAppName)'
              package: '$(Pipeline.Workspace)/frontend'
              runtimeStack: 'NODE|18-lts'
