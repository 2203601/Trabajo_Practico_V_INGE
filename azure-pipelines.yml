trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  # ===== QA URLs =====
  backendQAUrl: "https://coffeehub-back-qa-argeftdrb3dkb9du.brazilsouth-01.azurewebsites.net.azurewebsites.net/health"
  frontendQAUrl: "https://coffeehub-front-qa-argqggbvc3g0gkdc.brazilsouth-01.azurewebsites.net.azurewebsites.net"

  # ===== PROD URLs =====
  backendProdUrl: "https://coffeehub-back-prod-bzgaa5ekbed7fret.brazilsouth-01.azurewebsites.net"
  frontendProdUrl: "https://coffeehub-front-prod-hgh2ehb7bzchh4ft.brazilsouth-01.azurewebsites.net"

stages:
# =========================
# STAGE 1 - CI (Build)
# =========================
- stage: CI
  displayName: "Continuous Integration"
  jobs:
    - job: Backend
      displayName: "Backend CI"
      steps:
        - checkout: self

        - task: NodeTool@0
          inputs:
            versionSpec: '18.x'
          displayName: "Usar Node.js 18.x"

        - script: |
            cd coffehub/backend
            npm install
          displayName: "Install Backend"

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: 'coffehub/backend'
            ArtifactName: 'backend'
            publishLocation: 'Container'
          displayName: "Publicar artefacto Backend"

    - job: Frontend
      displayName: "Frontend CI"
      steps:
        - checkout: self

        - task: NodeTool@0
          inputs:
            versionSpec: '18.x'
          displayName: "Usar Node.js 18.x"

        - script: |
            cd coffehub/frontend
            npm install || true
            npm run build || echo "No build script definido"
          displayName: "Build Frontend"

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: 'coffehub/frontend'
            ArtifactName: 'frontend'
            publishLocation: 'Container'
          displayName: "Publicar artefacto Frontend"

# =========================
# STAGE 2 - Deploy QA
# =========================
- stage: QA
  displayName: "Deploy QA"
  dependsOn: CI
  jobs:
    - deployment: DeployBackendQA
      environment: QA
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: backend
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'azure-tp05-connection'
                  appName: 'CoffeeHub-Back-QA'
                  package: '$(Pipeline.Workspace)/backend'
              - script: curl -f $(backendQAUrl) || exit 1
                displayName: "Health Check Backend QA"

    - deployment: DeployFrontendQA
      environment: QA
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: frontend
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'azure-tp05-connection'
                  appName: 'CoffeeHub-Front-QA'
                  package: '$(Pipeline.Workspace)/frontend'
              - script: curl -f $(frontendQAUrl) || exit 1
                displayName: "Health Check Frontend QA"

# =========================
# STAGE 3 - Deploy PROD
# =========================
- stage: PROD
  displayName: "Deploy Production"
  dependsOn: QA
  condition: succeeded()
  jobs:
    - deployment: DeployBackendProd
      environment: PROD   # ⚠️ configurar aprobación manual en DevOps UI
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: backend
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'azure-tp05-connection'
                  appName: 'CoffeeHub-Back-PROD'
                  package: '$(Pipeline.Workspace)/backend'
              - script: curl -f $(backendProdUrl) || exit 1
                displayName: "Health Check Backend PROD"

    - deployment: DeployFrontendProd
      environment: PROD   # ⚠️ configurar aprobación manual en DevOps UI
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: frontend
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'azure-tp05-connection'
                  appName: 'CoffeeHub-Front-PROD'
                  package: '$(Pipeline.Workspace)/frontend'
              - script: curl -f $(frontendProdUrl) || exit 1
                displayName: "Health Check Frontend PROD"
